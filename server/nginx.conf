worker_processes 1;

events {
  worker_connections 1024;
}

http {
  sendfile             on;
  keepalive_timeout    65;
  client_max_body_size 5M;

  gzip                 on;
  gzip_vary            on;
  gzip_proxied         any;
  gzip_comp_level      6;
  gzip_buffers         16 8k;
  gzip_http_version    1.1;
  gzip_types           text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

  include /etc/nginx/mime.types;

  upstream api {
    least_conn;
    server api:4000 max_fails=3 fail_timeout=30s;
  }

  upstream frontend {
    least_conn;
    server frontend:3000 max_fails=3 fail_timeout=30s;
  }

  server {
    listen 80      default_server;
    listen [::]:80 default_server;

    if ($request_method = "OPTIONS") {
      return 200;
    }

    root /var/www/html;

    index index.html;

    # allow POST on static pages
    error_page  405     =200 $uri;

    location / {
      try_files $uri $uri/ @frontendproxy;
    }

    location @frontendproxy {
      proxy_pass         http://frontend;
      proxy_http_version 1.1;
      proxy_set_header   Upgrade $http_upgrade;
      proxy_set_header   Connection 'upgrade';
      proxy_set_header   Host $host;
      proxy_cache_bypass $http_upgrade;

      break;
    }

    location ~* \.(eot|otf|ttf|woff|woff2)$ {
      add_header Access-Control-Allow-Origin *;
    }

    location ~ /api/(?<url>.*) {
      proxy_pass         http://api/$url;
      proxy_http_version 1.1;
      proxy_set_header   Upgrade $http_upgrade;
      proxy_set_header   Connection 'upgrade';
      proxy_set_header   Host $host;
      proxy_cache_bypass $http_upgrade;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-NginX-Proxy true;
    }

    location /health-check {
      return 200;
      access_log off;
    }

    location /renders/ {
      alias      /data/capture/;
      access_log on;
      autoindex  off;
    }
  }
}
